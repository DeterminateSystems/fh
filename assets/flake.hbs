{
  {{#if description}}
  description = "{{ description }}";
  {{/if}}

  inputs = {
    {{#each inputs}}
    {{@key}}.url = "{{this}}";
    {{/each}}
  };

  outputs = { self{{#each inputs}}, {{@key}}{{/each}} }:
    let
      {{#if has_overlays}}
      overlays = [
        {{#each overlay_refs}}
        {{this}}
        {{/each}}
        {{#if overlay_attrs}}
        (final: prev: {
          {{#each overlay_attrs}}
          {{@key}} = {{this}};
          {{/each}}
        })
        {{/if}}
      ];
      {{/if}}
      supportedSystems = [ {{#each systems}}"{{ this }}"{{#unless @last}} {{/unless}}{{/each}} ];
      forEachSupportedSystem = f: nixpkgs.lib.genAttrs supportedSystems (system: f {
        pkgs = import nixpkgs { inherit {{#if overlays }}overlays {{/if}}system; };
      });
    in {
      {{#if dev_shells}}
      devShells = forEachSupportedSystem ({ pkgs }: {
        {{#each dev_shells}}
        {{@key}} = pkgs.mkShell {
          packages = with pkgs; [
            {{#if this.packages}}
            {{#each this.packages}}
            {{this}}
            {{/each}}
            # Add any other desired packages here
            {{else}}
            # Add any desired packages here
            {{/if}}
          ];
        };
        {{/each}}
      });
      {{/if}}

      {{#if packages}}
      {{/if}}
    };
}
